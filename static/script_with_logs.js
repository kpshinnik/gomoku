let gameState = {
    board: [],
    currentPlayer: 'X',
    userSymbol: 'X',
    aiSymbol: 'O',
    gameOver: false,
    winner: null,
    moveCount: 0
};

console.log('üöÄ JavaScript –∑–∞–≥—Ä—É–∂–µ–Ω, –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', gameState);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã
document.addEventListener('DOMContentLoaded', function() {
    console.log('üìÑ DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å—Ä–∞–∑—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    const modal = document.getElementById('game-result-modal');
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:', modal ? '–ù–ê–ô–î–ï–ù–û' : '–ù–ï –ù–ê–ô–î–ï–ù–û');
    if (!modal) {
        console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ HTML!');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    const requiredElements = [
        'game-result-modal',
        'modal-content', 
        'result-icon',
        'result-title',
        'result-message'
    ];
    
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞:');
    requiredElements.forEach(id => {
        const element = document.getElementById(id);
        console.log(`  - ${id}: ${element ? '–ù–ê–ô–î–ï–ù' : '–ù–ï –ù–ê–ô–î–ï–ù'}`);
    });
    
    initializeBoard();
    setupEventListeners();
    
    // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Å–∏–º–≤–æ–ª–∞ –≤–∏–¥–Ω—ã
    document.querySelector('.symbol-selection').style.display = 'block';
    
    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–±–∏—Ä–∞–µ–º X (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏–≥—Ä–∞ –Ω–µ –∏–¥–µ—Ç)
    if (gameState.moveCount === 0) {
        chooseSymbol('X');
        document.getElementById('game-status').textContent = '–°–∏–º–≤–æ–ª X –≤—ã–±—Ä–∞–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é. –ù–∞–∂–º–∏—Ç–µ "–ù–æ–≤–∞—è –∏–≥—Ä–∞" –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π —Å–∏–º–≤–æ–ª.';
    }
    
    console.log('‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
});

function initializeBoard() {
    console.log('üéØ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ—Å–∫–∏');
    
    const gameBoard = document.getElementById('game-board');
    if (!gameBoard) {
        console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç game-board –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        return;
    }
    
    gameBoard.innerHTML = '';
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç—É—é –¥–æ—Å–∫—É –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    gameState.board = [];
    for (let row = 0; row < 15; row++) {
        gameState.board[row] = [];
        for (let col = 0; col < 15; col++) {
            gameState.board[row][col] = '.';
        }
    }
    
    // –°–æ–∑–¥–∞–µ–º —Å–µ—Ç–∫—É 15x15
    for (let row = 0; row < 15; row++) {
        for (let col = 0; col < 15; col++) {
            const cell = document.createElement('div');
            cell.className = 'cell';
            cell.dataset.row = row;
            cell.dataset.col = col;
            cell.addEventListener('click', () => handleCellClick(row, col));
            gameBoard.appendChild(cell);
        }
    }
    
    console.log('‚úÖ –î–æ—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: 225 –∫–ª–µ—Ç–æ–∫');
}

function setupEventListeners() {
    console.log('üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π');
    document.getElementById('new-game').addEventListener('click', startNewGameWithSelectedSymbol);
    document.getElementById('restart').addEventListener('click', startNewGameWithSelectedSymbol);
    document.getElementById('select-x').addEventListener('click', () => chooseSymbol('X'));
    document.getElementById('select-o').addEventListener('click', () => chooseSymbol('O'));
}

function startNewGameWithSelectedSymbol() {
    console.log('üéÆ –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–π –∏–≥—Ä—ã —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Å–∏–º–≤–æ–ª–æ–º');
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å–∏–º–≤–æ–ª –ø–æ –∞–∫—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–µ
    const activeButton = document.querySelector('.symbol-btn.active');
    if (!activeButton) {
        showStatus('–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–∏–º–≤–æ–ª (X –∏–ª–∏ O)!');
        return;
    }
    
    const selectedSymbol = activeButton.id === 'select-x' ? 'X' : 'O';
    console.log('üéØ –í—ã–±—Ä–∞–Ω–Ω—ã–π —Å–∏–º–≤–æ–ª:', selectedSymbol);
    
    startNewGame(selectedSymbol);
}

function showSymbolChoice() {
    console.log('üéÆ –ü–æ–∫–∞–∑ –≤—ã–±–æ—Ä–∞ —Å–∏–º–≤–æ–ª–∞');
    
    // –°–±—Ä–æ—Å —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä—ã
    gameState.gameOver = false;
    gameState.winner = null;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —Å–∏–º–≤–æ–ª–∞ (–≤—Å–µ–≥–¥–∞ –≤–∏–¥–∏–º—ã–π)
    document.querySelector('.symbol-selection').style.display = 'block';
    document.getElementById('game-status').textContent = '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–∏–º–≤–æ–ª –¥–ª—è –Ω–æ–≤–æ–π –∏–≥—Ä—ã';
    
    // –û—á–∏—â–∞–µ–º –¥–æ—Å–∫—É
    initializeBoard();
}

function chooseSymbol(symbol) {
    console.log('üéØ –í—ã–±—Ä–∞–Ω —Å–∏–º–≤–æ–ª:', symbol);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI
    document.querySelectorAll('.symbol-selection button').forEach(btn => btn.classList.remove('active'));
    if (symbol === 'X') {
        document.getElementById('select-x').classList.add('active');
    } else {
        document.getElementById('select-o').classList.add('active');
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é –ø–∞–Ω–µ–ª—å
    document.getElementById('human-symbol').textContent = symbol;
    document.getElementById('ai-symbol').textContent = symbol === 'X' ? 'O' : 'X';
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
    showStatus(`–°–∏–º–≤–æ–ª ${symbol} –≤—ã–±—Ä–∞–Ω! –ù–∞–∂–º–∏—Ç–µ "–ù–æ–≤–∞—è –∏–≥—Ä–∞" –¥–ª—è –Ω–∞—á–∞–ª–∞.`);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∏–≥—Ä—ã
    gameState.userSymbol = symbol;
    gameState.aiSymbol = symbol === 'X' ? 'O' : 'X';
}

async function startNewGame(userSymbol) {
    console.log('üéÆ –ù–∞—á–∞–ª–æ –Ω–æ–≤–æ–π –∏–≥—Ä—ã —Å —Å–∏–º–≤–æ–ª–æ–º:', userSymbol);
    
    try {
        showStatus('–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∏–≥—Ä—ã...');
        
        const response = await fetch('/api/new_game', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ symbol: userSymbol })
        });
        
        const data = await response.json();
        console.log('üì¶ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä—ã:', data);
        
        if (data.success) {
            console.log('‚úÖ –ò–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞');
            
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            gameState.userSymbol = data.user_symbol;
            gameState.aiSymbol = data.ai_symbol;
            gameState.currentPlayer = data.current_player;
            gameState.gameOver = false;
            gameState.winner = null;
            gameState.moveCount = data.move_count || 0;
            
            console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã:', gameState);
            console.log('üìä –î–æ—Å–∫–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–≥—Ä—ã:', data.board);
            
            // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ—Å–∫–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º
            updateBoard(data.board);
            updateGameInfo(data);
            
            // –û—Å—Ç–∞–≤–ª—è–µ–º –≤—ã–±–æ—Ä —Å–∏–º–≤–æ–ª–∞ –≤–∏–¥–∏–º—ã–º –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–º–µ–Ω—ã
            // document.querySelector('.symbol-selection').style.display = 'none';
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–¥–µ–ª–∞–ª –ª–∏ –ò–ò –ø–µ—Ä–≤—ã–π —Ö–æ–¥
            if (data.ai_move) {
                const [aiRow, aiCol] = data.ai_move;
                console.log(`ü§ñ –ò–ò —Å–¥–µ–ª–∞–ª –ø–µ—Ä–≤—ã–π —Ö–æ–¥ –Ω–∞ [${aiRow}][${aiCol}]`);
                highlightLastMove(aiRow, aiCol);
                showStatus(`–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –í—ã –∏–≥—Ä–∞–µ—Ç–µ –∑–∞ ${userSymbol}. –ò–ò —Å—Ö–æ–¥–∏–ª –Ω–∞ ${String.fromCharCode(65 + aiCol)}${aiRow + 1}. –í–∞—à —Ö–æ–¥!`);
            } else if (data.current_player !== userSymbol) {
                // –ò–ò –¥–æ–ª–∂–µ–Ω —Ö–æ–¥–∏—Ç—å –ø–µ—Ä–≤—ã–º, –Ω–æ –µ—â–µ –Ω–µ —Å—Ö–æ–¥–∏–ª (—Å—Ç–∞—Ä–∞—è –ª–æ–≥–∏–∫–∞)
                showStatus(`–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –í—ã –∏–≥—Ä–∞–µ—Ç–µ –∑–∞ ${userSymbol}. –ò–ò –¥–µ–ª–∞–µ—Ç –ø–µ—Ä–≤—ã–π —Ö–æ–¥...`);
                setTimeout(() => requestAIMove(), 500);
            } else {
                // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ–¥–∏—Ç –ø–µ—Ä–≤—ã–º
                showStatus(`–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –í—ã –∏–≥—Ä–∞–µ—Ç–µ –∑–∞ ${userSymbol}. –í–∞—à —Ö–æ–¥!`);
            }
        } else {
            showStatus(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã: ${data.error}`);
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã:', data);
        }
    } catch (error) {
        showStatus('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É');
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error);
    }
}

async function handleCellClick(row, col) {
    console.log(`üéØ –ö–õ–ò–ö –ø–æ –∫–ª–µ—Ç–∫–µ [${row}][${col}]`);
    console.log('üìä –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã:', gameState);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–∏–º–≤–æ–ª –≤—ã–±—Ä–∞–Ω
    if (!gameState.userSymbol || gameState.userSymbol === '') {
        console.log('‚ùå –°–∏–º–≤–æ–ª –Ω–µ –≤—ã–±—Ä–∞–Ω! –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —Å–∏–º–≤–æ–ª–∞.');
        showSymbolChoice();
        showStatus('–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–∏–º–≤–æ–ª!');
        return;
    }
    
    // –ï—Å–ª–∏ –∏–≥—Ä–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    if (!gameState.board || gameState.board.length === 0 || gameState.moveCount === 0) {
        console.log('‚ö†Ô∏è –ò–≥—Ä–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏...');
        showStatus('–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∏–≥—Ä—ã...');
        await startNewGame(gameState.userSymbol);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞
        if (!gameState.board || gameState.board.length === 0) {
            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É');
            showStatus('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
            return;
        }
    }
    
    if (gameState.gameOver) {
        console.log('‚èπÔ∏è –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞');
        showStatus('–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –ù–∞—á–Ω–∏—Ç–µ –Ω–æ–≤—É—é –∏–≥—Ä—É.');
        return;
    }

    if (gameState.currentPlayer !== gameState.userSymbol) {
        console.log(`‚ùå –ù–µ –≤–∞—à —Ö–æ–¥! –¢–µ–∫—É—â–∏–π: ${gameState.currentPlayer}, –í–∞—à: ${gameState.userSymbol}`);
        showStatus('–°–µ–π—á–∞—Å –Ω–µ –≤–∞—à —Ö–æ–¥!');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–µ—Ç–∫–∞ –ø—É—Å—Ç–∞ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª–µ—Ç–∫–∏ [${row}][${col}]: "${gameState.board[row][col]}"`);
    console.log(`üîç –ü–æ–ª–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ—Å–∫–∏:`, gameState.board);
    
    if (gameState.board[row] && gameState.board[row][col] !== '.') {
        console.log(`‚ùå –ö–ª–µ—Ç–∫–∞ [${row}][${col}] —É–∂–µ –∑–∞–Ω—è—Ç–∞:`, gameState.board[row][col]);
        showStatus('–≠—Ç–∞ –∫–ª–µ—Ç–∫–∞ —É–∂–µ –∑–∞–Ω—è—Ç–∞!');
        return;
    }
    
    console.log(`‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ö–æ–¥–∞ [${row}][${col}]`);
    
    try {
        showStatus('–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∞—à–µ–≥–æ —Ö–æ–¥–∞...');
        
        const response = await fetch('/api/make_move', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ row: row, col: col })
        });
        
        console.log('üì° –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞, —Å—Ç–∞—Ç—É—Å:', response.status);
        
        const data = await response.json();
        console.log('üì¶ –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', data);
        
        if (data.success) {
            console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª —Ö–æ–¥');
            console.log('üìä –ù–æ–≤–∞—è –¥–æ—Å–∫–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', data.board);
            
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            gameState.board = data.board;
            gameState.currentPlayer = data.current_player;
            gameState.moveCount = data.move_count || 0;
            
            console.log('üéØ –í—ã–∑—ã–≤–∞–µ–º updateBoard...');
            updateBoard(data.board);
            console.log('üìù –í—ã–∑—ã–≤–∞–µ–º updateGameInfo...');
            updateGameInfo(data);
            
            // –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ò–Ø –ò–ì–†–´
            console.log('üîç –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ò–Ø –ò–ì–†–´:');
            console.log('üîç data.game_over =', data.game_over);
            console.log('üîç typeof data.game_over =', typeof data.game_over);
            console.log('üîç data.winner =', data.winner);
            console.log('üîç –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', JSON.stringify(data, null, 2));
            
            // –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê
            console.log('üîç gameState.gameOver =', gameState.gameOver);
            console.log('üîç gameState.winner =', gameState.winner);
            
            if (data.game_over) {
                console.log('üèÅ –ò–ì–†–ê –ó–ê–í–ï–†–®–ï–ù–ê! –î–∞–Ω–Ω—ã–µ:', data);
                gameState.gameOver = true;
                gameState.winner = data.winner;
                
                console.log('üèÜ –ü–æ–±–µ–¥–∏—Ç–µ–ª—å:', data.winner);
                console.log('üë§ –°–∏–º–≤–æ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', gameState.userSymbol);
                console.log('ü§ñ –°–∏–º–≤–æ–ª –ò–ò:', gameState.aiSymbol);
                
                if (data.winner === gameState.userSymbol) {
                    showStatus('üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!');
                } else if (data.winner === gameState.aiSymbol) {
                    showStatus('üòî –ò–ò –≤—ã–∏–≥—Ä–∞–ª. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!');
                } else {
                    showStatus('ü§ù –ù–∏—á—å—è!');
                }
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
                console.log('‚è∞ –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞...');
                setTimeout(() => {
                    console.log('üéØ –í—ã–∑–æ–≤ showGameResultModal —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:', {
                        winner: data.winner,
                        gameData: { move_count: gameState.moveCount }
                    });
                    showGameResultModal(data.winner, {
                        move_count: gameState.moveCount
                    });
                }, 1000);
            } else {
                console.log('‚ùå –£–°–õ–û–í–ò–ï data.game_over –ù–ï –í–´–ü–û–õ–ù–ï–ù–û!');
                console.log('‚ùå –í–æ–∑–º–æ–∂–Ω–æ, –∏–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –Ω–æ —É—Å–ª–æ–≤–∏–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ');
                
                // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
                if (data.winner) {
                    console.log('üö® –ù–ê–ô–î–ï–ù –ü–û–ë–ï–î–ò–¢–ï–õ–¨ –ë–ï–ó game_over! –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ');
                    gameState.gameOver = true;
                    gameState.winner = data.winner;
                    
                    if (data.winner === gameState.userSymbol) {
                        showStatus('üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!');
                    } else if (data.winner === gameState.aiSymbol) {
                        showStatus('üòî –ò–ò –≤—ã–∏–≥—Ä–∞–ª. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!');
                    } else {
                        showStatus('ü§ù –ù–∏—á—å—è!');
                    }
                    
                    setTimeout(() => {
                        console.log('üö® –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–´–ô –≤—ã–∑–æ–≤ showGameResultModal');
                        showGameResultModal(data.winner, {
                            move_count: gameState.moveCount
                        });
                    }, 1000);
                    return;
                }
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ö–æ–¥ –ò–ò, –µ—Å–ª–∏ –æ–Ω –±—ã–ª —Å–¥–µ–ª–∞–Ω
                if (data.ai_move) {
                    const [aiRow, aiCol] = data.ai_move;
                    console.log(`ü§ñ –ò–ò —Å—Ö–æ–¥–∏–ª –Ω–∞ [${aiRow}][${aiCol}]`);
                    highlightLastMove(aiRow, aiCol);
                    showStatus(`–ò–ò —Å—Ö–æ–¥–∏–ª –Ω–∞ ${String.fromCharCode(65 + aiCol)}${aiRow + 1}. –í–∞—à —Ö–æ–¥!`);
                } else {
                    showStatus('–í–∞—à —Ö–æ–¥!');
                }
            }
            
            console.log('‚úÖ –•–æ–¥ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–±—Ä–∞–±–æ—Ç–∞–Ω');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –¥–æ—Å–∫–∏ –ø–æ—Å–ª–µ —Ö–æ–¥–∞
            setTimeout(() => validateBoardIntegrity(), 100);
        } else {
            // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ "–ò–≥—Ä–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞", –ø—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É
            if (data.error && data.error.includes('–Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞')) {
                console.log('üîÑ –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...');
                await startNewGame(gameState.userSymbol);
                // –ü–æ–≤—Ç–æ—Ä—è–µ–º —Ö–æ–¥ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã
                setTimeout(() => handleCellClick(row, col), 500);
                return;
            }
            
            showStatus(`–û—à–∏–±–∫–∞ —Ö–æ–¥–∞: ${data.error}`);
            console.error('‚ùå –û—à–∏–±–∫–∞ —Ö–æ–¥–∞:', data);
        }
    } catch (error) {
        showStatus('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É');
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error);
    }
}

function updateBoard(board) {
    console.log('üîÑ === –ù–ê–ß–ê–õ–û –û–ë–ù–û–í–õ–ï–ù–ò–Ø –î–û–°–ö–ò ===');
    console.log('üìä –ü–æ–ª—É—á–µ–Ω–∞ –¥–æ—Å–∫–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', board);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –¥–æ—Å–∫–∏
    if (!board || !Array.isArray(board) || board.length !== 15) {
        console.error('‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω–∞—è –¥–æ—Å–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', board);
        return;
    }
    
    // –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –∫–æ–ø–∏—Ä—É–µ–º –¥–æ—Å–∫—É, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Å—Å—ã–ª–∫—É
    gameState.board = [];
    for (let row = 0; row < 15; row++) {
        gameState.board[row] = [];
        for (let col = 0; col < 15; col++) {
            // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è: –ø—É—Å—Ç—ã–µ –∫–ª–µ—Ç–∫–∏ –≤—Å–µ–≥–¥–∞ '.'
            const cellValue = board[row][col];
            if (cellValue === 'X' || cellValue === 'O') {
                gameState.board[row][col] = cellValue;
            } else {
                gameState.board[row][col] = '.';
            }
        }
    }
    
    let changesCount = 0;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ –∫–ª–µ—Ç–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å
    for (let row = 0; row < 15; row++) {
        for (let col = 0; col < 15; col++) {
            const cell = document.querySelector(`[data-row="${row}"][data-col="${col}"]`);
            if (!cell) {
                console.error(`‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∫–ª–µ—Ç–∫–∞ [${row}][${col}]`);
                continue;
            }
            
            const newValue = gameState.board[row][col];
            const currentValue = cell.textContent.trim();
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
            if ((newValue === 'X' && currentValue !== 'X') || 
                (newValue === 'O' && currentValue !== 'O') || 
                (newValue === '.' && currentValue !== '')) {
                
                // –°–Ω–∞—á–∞–ª–∞ –æ—á–∏—â–∞–µ–º –∫–ª–µ—Ç–∫—É
                cell.textContent = '';
                cell.className = 'cell';
                cell.style.color = '';
                cell.style.backgroundColor = '';
                cell.style.fontWeight = '';
                
                if (newValue === 'X') {
                    cell.textContent = 'X';
                    cell.classList.add('x');
                    cell.style.color = '#e74c3c';
                    cell.style.backgroundColor = '#fadbd8';
                    cell.style.fontWeight = 'bold';
                    
                    changesCount++;
                    console.log(`‚úÖ –ò–ó–ú–ï–ù–ï–ù–ò–ï: –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω X –≤ [${row}][${col}]`);
                } else if (newValue === 'O') {
                    cell.textContent = 'O';
                    cell.classList.add('o');
                    cell.style.color = '#3498db';
                    cell.style.backgroundColor = '#d6eaf8';
                    cell.style.fontWeight = 'bold';
                    
                    changesCount++;
                    console.log(`‚úÖ –ò–ó–ú–ï–ù–ï–ù–ò–ï: –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω O –≤ [${row}][${col}]`);
                } else {
                    // –ü—É—Å—Ç–∞—è –∫–ª–µ—Ç–∫–∞
                    changesCount++;
                    console.log(`üßπ –û–ß–ò–°–¢–ö–ê: –û—á–∏—â–µ–Ω–∞ –∫–ª–µ—Ç–∫–∞ [${row}][${col}]`);
                }
            }
        }
    }
    
    console.log(`üìà –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π: ${changesCount}`);
    console.log('üîÑ === –ö–û–ù–ï–¶ –û–ë–ù–û–í–õ–ï–ù–ò–Ø –î–û–°–ö–ò ===');
}

function updateGameInfo(data) {
    console.log('üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏–≥—Ä–µ:', data);
    
    document.getElementById('current-player').textContent = data.current_player || gameState.currentPlayer;
    document.getElementById('move-count').textContent = data.move_count || gameState.moveCount || 0;
    document.getElementById('human-symbol').textContent = data.user_symbol || gameState.userSymbol;
    document.getElementById('ai-symbol').textContent = data.ai_symbol || gameState.aiSymbol;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    if (data.current_player) gameState.currentPlayer = data.current_player;
    if (data.move_count !== undefined) gameState.moveCount = data.move_count;
    if (data.user_symbol) gameState.userSymbol = data.user_symbol;
    if (data.ai_symbol) gameState.aiSymbol = data.ai_symbol;
    
    // –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ò–Ø –ò–ì–†–´ –í updateGameInfo
    if (data.game_over) {
        console.log('üö® –û–ë–ù–ê–†–£–ñ–ï–ù–û –ó–ê–í–ï–†–®–ï–ù–ò–ï –ò–ì–†–´ –í updateGameInfo!');
        console.log('üö® data.game_over =', data.game_over);
        console.log('üö® data.winner =', data.winner);
        
        gameState.gameOver = true;
        gameState.winner = data.winner;
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        setTimeout(() => {
            console.log('üö® –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–´–ô –ø–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏–∑ updateGameInfo');
            showGameResultModal(data.winner, {
                move_count: gameState.moveCount
            });
        }, 1000);
    }
}

function highlightLastMove(row, col) {
    console.log(`üî¶ –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ö–æ–¥–∞ [${row}][${col}]`);
    
    // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –ø–æ–¥—Å–≤–µ—Ç–∫—É
    document.querySelectorAll('.cell.last-move').forEach(cell => {
        cell.classList.remove('last-move');
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Ö–æ–¥—É
    const cell = document.querySelector(`[data-row="${row}"][data-col="${col}"]`);
    if (cell) {
        cell.classList.add('last-move');
        console.log('‚úÖ –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞');
    } else {
        console.error('‚ùå –ö–ª–µ—Ç–∫–∞ –¥–ª—è –ø–æ–¥—Å–≤–µ—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
}

function showStatus(message) {
    console.log('üì¢ –°—Ç–∞—Ç—É—Å:', message);
    document.getElementById('game-status').textContent = message;
}

async function fetchGameState() {
    console.log('üîÑ –ó–∞–ø—Ä–æ—Å –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã —Å —Å–µ—Ä–≤–µ—Ä–∞...');
    
    try {
        const response = await fetch('/api/game_state', {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
            }
        });
        
        const data = await response.json();
        console.log('üì¶ –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã —Å —Å–µ—Ä–≤–µ—Ä–∞:', data);
        
        if (data.success) {
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            gameState.currentPlayer = data.current_player;
            gameState.userSymbol = data.user_symbol;
            gameState.aiSymbol = data.ai_symbol;
            gameState.moveCount = data.move_count || 0;
            gameState.gameOver = data.game_over || false;
            gameState.winner = data.winner || null;
            
            console.log('‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
            updateBoard(data.board);
            updateGameInfo(data);
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã:', data.error);
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã:', error);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–æ—Å–∫–∏
function validateBoardIntegrity() {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–æ—Å–∫–∏...');
    
    let totalPieces = 0;
    let xCount = 0;
    let oCount = 0;
    
    for (let row = 0; row < 15; row++) {
        for (let col = 0; col < 15; col++) {
            const cell = document.querySelector(`[data-row="${row}"][data-col="${col}"]`);
            if (cell && cell.textContent.trim()) {
                totalPieces++;
                if (cell.textContent.trim() === 'X') xCount++;
                if (cell.textContent.trim() === 'O') oCount++;
            }
        }
    }
    
    console.log(`üìä –§–∏–≥—É—Ä –Ω–∞ –¥–æ—Å–∫–µ: –≤—Å–µ–≥–æ=${totalPieces}, X=${xCount}, O=${oCount}`);
    
    // –ï—Å–ª–∏ —Ñ–∏–≥—É—Ä –º–µ–Ω—å—à–µ —á–µ–º –æ–∂–∏–¥–∞–µ—Ç—Å—è, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º—Å—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º
    if (totalPieces < gameState.moveCount) {
        console.log('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–æ—Ç–µ—Ä—è —Ñ–∏–≥—É—Ä, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º...');
        fetchGameState();
    }
}

async function requestAIMove() {
    console.log('ü§ñ –ó–∞–ø—Ä–æ—Å —Ö–æ–¥–∞ –ò–ò...');
    
    try {
        showStatus('–ò–ò –¥—É–º–∞–µ—Ç...');
        showAIThinking(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
        
        const response = await fetch('/api/ai_move', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            }
        });
        
        const data = await response.json();
        console.log('ü§ñ –û—Ç–≤–µ—Ç –ò–ò:', data);
        
        hideAIThinking(); // –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
        
        if (data.success) {
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            gameState.board = data.board;
            gameState.currentPlayer = data.current_player;
            gameState.moveCount = data.move_count || 0;
            
            updateBoard(data.board);
            updateGameInfo(data);
            
            if (data.game_over) {
                gameState.gameOver = true;
                gameState.winner = data.winner;
                
                if (data.winner === gameState.userSymbol) {
                    showStatus('üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!');
                } else if (data.winner === gameState.aiSymbol) {
                    showStatus('üòî –ò–ò –≤—ã–∏–≥—Ä–∞–ª. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!');
                } else {
                    showStatus('ü§ù –ù–∏—á—å—è!');
                }
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
                setTimeout(() => {
                    showGameResultModal(data.winner, {
                        move_count: gameState.moveCount
                    });
                }, 1000);
            } else {
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ö–æ–¥ –ò–ò
                if (data.ai_move) {
                    const [aiRow, aiCol] = data.ai_move;
                    highlightLastMove(aiRow, aiCol);
                    showStatus(`–ò–ò —Å—Ö–æ–¥–∏–ª –Ω–∞ ${String.fromCharCode(65 + aiCol)}${aiRow + 1}. –í–∞—à —Ö–æ–¥!`);
                } else {
                    showStatus('–í–∞—à —Ö–æ–¥!');
                }
            }
            
            console.log('‚úÖ –•–æ–¥ –ò–ò –æ–±—Ä–∞–±–æ—Ç–∞–Ω');
        } else {
            hideAIThinking(); // –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –ø—Ä–∏ –æ—à–∏–±–∫–µ
            showStatus(`–û—à–∏–±–∫–∞ —Ö–æ–¥–∞ –ò–ò: ${data.error}`);
            console.error('‚ùå –û—à–∏–±–∫–∞ —Ö–æ–¥–∞ –ò–ò:', data);
        }
    } catch (error) {
        hideAIThinking(); // –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –ø—Ä–∏ –æ—à–∏–±–∫–µ
        showStatus('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É');
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Ö–æ–¥–∞ –ò–ò:', error);
    }
}

console.log('‚úÖ JavaScript —Ñ–∞–π–ª –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω');

// ========== –§–£–ù–ö–¶–ò–ò –ü–†–û–ì–†–ï–°–°-–ë–ê–†–ê –ò–ò ==========

let aiThinkingInterval = null;
let aiThinkingProgress = 0;

function showAIThinking() {
    console.log('ü§ñ –ü–æ–∫–∞–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ –ò–ò');
    
    const overlay = document.getElementById('ai-thinking-overlay');
    const progressBar = document.getElementById('ai-progress-bar');
    const message = document.getElementById('ai-thinking-message');
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    aiThinkingProgress = 0;
    progressBar.style.width = '0%';
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–≤–µ—Ä–ª–µ–π
    overlay.style.display = 'block';
    
    // –ú–∞—Å—Å–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
    const messages = [
        '–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ö–æ–¥—ã...',
        '–û—Ü–µ–Ω–∏–≤–∞—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ –ø–æ–∑–∏—Ü–∏–∏...',
        '–ò—â—É –ª—É—á—à–∏–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏...',
        '–ü—Ä–æ—Å—á–∏—Ç—ã–≤–∞—é –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ä–∞–∑–≤–∏—Ç–∏—è...',
        '–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —É–≥—Ä–æ–∑—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏...',
        '–í—ã–±–∏—Ä–∞—é –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ö–æ–¥...'
    ];
    
    let messageIndex = 0;
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    aiThinkingInterval = setInterval(() => {
        aiThinkingProgress += Math.random() * 15 + 5; // –°–ª—É—á–∞–π–Ω—ã–π –ø—Ä–∏—Ä–æ—Å—Ç 5-20%
        
        if (aiThinkingProgress > 95) {
            aiThinkingProgress = 95; // –ù–µ –¥–æ—Ö–æ–¥–∏–º –¥–æ 100% –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏–º –æ—Ç–≤–µ—Ç
        }
        
        progressBar.style.width = aiThinkingProgress + '%';
        
        // –ú–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 1.5 —Å–µ–∫—É–Ω–¥—ã
        if (Math.random() < 0.3) {
            messageIndex = (messageIndex + 1) % messages.length;
            message.textContent = messages[messageIndex];
        }
    }, 200);
    
    console.log('‚úÖ –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –ò–ò –ø–æ–∫–∞–∑–∞–Ω');
}

function hideAIThinking() {
    console.log('‚ùå –°–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ –ò–ò');
    
    const overlay = document.getElementById('ai-thinking-overlay');
    const progressBar = document.getElementById('ai-progress-bar');
    
    // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–æ 100%
    progressBar.style.width = '100%';
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª
    if (aiThinkingInterval) {
        clearInterval(aiThinkingInterval);
        aiThinkingInterval = null;
    }
    
    // –°–∫—Ä—ã–≤–∞–µ–º —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
    setTimeout(() => {
        overlay.style.display = 'none';
        aiThinkingProgress = 0;
    }, 300);
    
    console.log('‚úÖ –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –ò–ò —Å–∫—Ä—ã—Ç');
}

// ========== –§–£–ù–ö–¶–ò–ò –ú–û–î–ê–õ–¨–ù–û–ì–û –û–ö–ù–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê –ò–ì–†–´ ==========

function showGameResultModal(winner, gameData = {}) {
    console.log('üèÜ –í–´–ó–í–ê–ù–ê –§–£–ù–ö–¶–ò–Ø showGameResultModal!');
    console.log('üèÜ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:', { winner, gameData });
    console.log('üèÜ –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã:', gameState);
    
    const modal = document.getElementById('game-result-modal');
    console.log('üèÜ –ù–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç modal:', modal);
    
    if (!modal) {
        console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ DOM!');
        console.log('üîç –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å id –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ:');
        const allElementsWithId = document.querySelectorAll('[id]');
        allElementsWithId.forEach(el => console.log(`  - ${el.id}: ${el.tagName}`));
        return;
    }
    
    const modalContent = document.getElementById('modal-content');
    const resultIcon = document.getElementById('result-icon');
    const resultTitle = document.getElementById('result-title');
    const resultMessage = document.getElementById('result-message');
    
    console.log('üèÜ –≠–ª–µ–º–µ–Ω—Ç—ã –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞:', {
        modalContent: !!modalContent,
        resultIcon: !!resultIcon,
        resultTitle: !!resultTitle,
        resultMessage: !!resultMessage
    });
    
    if (!modalContent || !resultIcon || !resultTitle || !resultMessage) {
        console.error('‚ùå –û–®–ò–ë–ö–ê: –ù–µ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –Ω–∞–π–¥–µ–Ω—ã!');
        return;
    }
    
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∫–ª–∞—Å—Å—ã
    modalContent.className = 'modal-content';
    
    if (winner === 'draw') {
        // –ù–∏—á—å—è
        modalContent.classList.add('draw');
        resultIcon.textContent = 'ü§ù';
        resultTitle.textContent = '–ù–∏—á—å—è!';
        resultMessage.textContent = '–û—Ç–ª–∏—á–Ω–∞—è –∏–≥—Ä–∞! –ù–∏–∫—Ç–æ –Ω–µ —Å–º–æ–≥ –æ–¥–µ—Ä–∂–∞—Ç—å –ø–æ–±–µ–¥—É.';
    } else if (winner === gameState.userSymbol) {
        // –ü–æ–±–µ–¥–∞ –∏–≥—Ä–æ–∫–∞
        modalContent.classList.add(`winner-${winner.toLowerCase()}`);
        resultIcon.textContent = winner === 'X' ? '‚ùå' : '‚≠ï';
        resultTitle.textContent = '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!';
        resultMessage.textContent = `–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –∏–≥—Ä–∞—è –∑–∞ ${winner}! –û—Ç–ª–∏—á–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è!`;
    } else if (winner === gameState.aiSymbol) {
        // –ü–æ–±–µ–¥–∞ –ò–ò
        modalContent.classList.add(`winner-${winner.toLowerCase()}`);
        resultIcon.textContent = winner === 'X' ? '‚ùå' : '‚≠ï';
        resultTitle.textContent = '–ò–ò –ø–æ–±–µ–¥–∏–ª';
        resultMessage.textContent = `–ò–ò –≤—ã–∏–≥—Ä–∞–ª –∏–≥—Ä–∞—è –∑–∞ ${winner}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!`;
    } else {
        // –û–±—â–∏–π —Å–ª—É—á–∞–π
        modalContent.classList.add(`winner-${winner.toLowerCase()}`);
        resultIcon.textContent = 'üèÜ';
        resultTitle.textContent = '–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!';
        resultMessage.textContent = `–ü–æ–±–µ–¥–∏–ª ${winner}!`;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —Ö–æ–¥–æ–≤
    if (gameData.move_count) {
        resultMessage.textContent += ` –ò–≥—Ä–∞ –¥–ª–∏–ª–∞—Å—å ${gameData.move_count} —Ö–æ–¥–æ–≤.`;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    console.log('üèÜ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º display: block –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞');
    modal.style.display = 'block';
    console.log('üèÜ –°—Ç–∏–ª—å display —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', modal.style.display);
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ CSS
    const computedStyle = window.getComputedStyle(modal);
    console.log('üèÜ Computed display:', computedStyle.display);
    console.log('üèÜ Computed visibility:', computedStyle.visibility);
    console.log('üèÜ Computed z-index:', computedStyle.zIndex);
    console.log('üèÜ Computed position:', computedStyle.position);
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∏–ª–∏
    modal.style.position = 'fixed';
    modal.style.zIndex = '9999';
    modal.style.visibility = 'visible';
    modal.style.opacity = '1';
    
    console.log('üèÜ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —Å—Ç–∏–ª–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è
    modal.onclick = function(event) {
        if (event.target === modal) {
            closeGameResultModal();
        }
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏—à–∏ Escape
    document.addEventListener('keydown', handleEscapeKey);
    
    console.log('‚úÖ –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û –†–ï–ó–£–õ–¨–¢–ê–¢–ê –î–û–õ–ñ–ù–û –ë–´–¢–¨ –ü–û–ö–ê–ó–ê–ù–û!');
    console.log('‚úÖ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ modal.style.display:', modal.style.display);
    
    // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–∫–∞–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞, –µ—Å–ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    setTimeout(() => {
        const computedStyle = window.getComputedStyle(modal);
        console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ 500–º—Å - modal display:', computedStyle.display);
        console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ 500–º—Å - modal visibility:', computedStyle.visibility);
        
        if (computedStyle.display === 'none' || computedStyle.visibility === 'hidden') {
            console.warn('‚ö†Ô∏è –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û –ù–ï –û–¢–û–ë–†–ê–ñ–ê–ï–¢–°–Ø! –ü–æ–∫–∞–∑—ã–≤–∞–µ–º alert');
            let message = '';
            if (winner === 'draw') {
                message = 'ü§ù –ù–∏—á—å—è! –û—Ç–ª–∏—á–Ω–∞—è –∏–≥—Ä–∞!';
            } else if (winner === gameState.userSymbol) {
                message = `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –∏–≥—Ä–∞—è –∑–∞ ${winner}!`;
            } else if (winner === gameState.aiSymbol) {
                message = `üòî –ò–ò –≤—ã–∏–≥—Ä–∞–ª –∏–≥—Ä–∞—è –∑–∞ ${winner}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!`;
            } else {
                message = `üèÜ –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –ü–æ–±–µ–¥–∏–ª ${winner}!`;
            }
            
            if (gameData.move_count) {
                message += ` –ò–≥—Ä–∞ –¥–ª–∏–ª–∞—Å—å ${gameData.move_count} —Ö–æ–¥–æ–≤.`;
            }
            
            alert(message);
        }
    }, 500);
}

function closeGameResultModal() {
    console.log('‚ùå –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–≥—Ä—ã');
    
    const modal = document.getElementById('game-result-modal');
    modal.style.display = 'none';
    
    // –£–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏—à–∏ Escape
    document.removeEventListener('keydown', handleEscapeKey);
    
    console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∑–∞–∫—Ä—ã—Ç–æ');
}

function handleEscapeKey(event) {
    if (event.key === 'Escape') {
        closeGameResultModal();
    }
}

async function startNewGameFromModal() {
    console.log('üéÆ –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–π –∏–≥—Ä—ã –∏–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞');
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    closeGameResultModal();
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—É—é –∏–≥—Ä—É —Å —Ç–µ–∫—É—â–∏–º –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Å–∏–º–≤–æ–ª–æ–º
    if (gameState.userSymbol) {
        await startNewGame(gameState.userSymbol);
    } else {
        // –ï—Å–ª–∏ —Å–∏–º–≤–æ–ª –Ω–µ –≤—ã–±—Ä–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
        showSymbolChoice();
        showStatus('–í—ã–±–µ—Ä–∏—Ç–µ —Å–∏–º–≤–æ–ª –¥–ª—è –Ω–æ–≤–æ–π –∏–≥—Ä—ã!');
    }
}

// ========== –§–£–ù–ö–¶–ò–ò –ú–û–î–ê–õ–¨–ù–û–ì–û –û–ö–ù–ê –ó–ê–í–ï–†–®–ï–ù–´ ==========

console.log('‚úÖ –§—É–Ω–∫—Ü–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–≥—Ä—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã');

// ========== –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ú–û–î–ê–õ–¨–ù–û–ì–û –û–ö–ù–ê ==========

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏–∑ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
window.testModal = function(winner = 'X') {
    console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–û–î–ê–õ–¨–ù–û–ì–û –û–ö–ù–ê');
    showGameResultModal(winner, { move_count: 10 });
};

console.log('üß™ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è window.testModal() –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
console.log('üß™ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ testModal("X") –∏–ª–∏ testModal("O") –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞'); 